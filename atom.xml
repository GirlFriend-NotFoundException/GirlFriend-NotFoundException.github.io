<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>曾是惊鸿照影来</title>
  
  <subtitle>Stay Hungry, Stay Foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.girlfriendnotfoundexception.com/"/>
  <updated>2019-06-24T06:35:45.098Z</updated>
  <id>www.girlfriendnotfoundexception.com/</id>
  
  <author>
    <name>高槻泉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android之布局和控件</title>
    <link href="www.girlfriendnotfoundexception.com/Android%E4%B9%8B%E5%B8%83%E5%B1%80%E5%92%8C%E6%8E%A7%E4%BB%B6/"/>
    <id>www.girlfriendnotfoundexception.com/Android之布局和控件/</id>
    <published>2019-06-24T06:32:33.000Z</published>
    <updated>2019-06-24T06:35:45.098Z</updated>
    
    <content type="html"><![CDATA[<p>#布局和控件</p><a id="more"></a><p>#布局管理器<br>     7种常见的布局管理器<br>   relativelayout（相对布局）<br>   linearlayout（线性布局）<br>   framelayout（帧布局）<br>   tablelayout（表格布局）<br>   absolulayout（绝对布局）<br>   gridlayout（网格布局）<br>   android.support.constraint.ConstraintLayout<br>   各种布局管理器都有各自的好处和不足，最后一种布局是android studio3.0以上的一种新布局方式，过几天研究研究.</p><p>##Relativelayout（相对布局）<br>     相对布局顾名思义它是相对的，有一个参考点的。这个参考点一般来自于父容器和兄弟容器。它的关键在于我们要根据各个组件之间的位置关系控制组件的摆放。<br>     组件布局属性：<br>     android gravity(设置布局管理器各子组件的摆放方式)参数是表示方位的词。<br>    android ignoreGravity（设置某个组件不受前面的属性的影响）<br>    要写上不受影响的id,没有id的话设置一个id<br>    layout_above(上方) lay_toleftof(左边)等等设置组件相对于参考组件的位置<br>    align：对齐<br>    layout_alignParentBottom等等来设置组件和父容器的对齐方式，属性值为Boolean true才行<br>    layout_alignBottom等等设置某一组件和一个组件对齐方式<br>    layout_centerhorizontal组件位于布局管理器水平中间位置<br>    layout_centerinparent中间位置  vertical垂直居中</p><p>##Linearlayout（线性布局）<br>    布局属性：<br>    vertical纵向的叫做垂直线性布局管理器<br>    horizontal横向的叫做水平线性布局管理器<br>    组件布局属性：<br>    gravity：显示组件的位置，可以把表示方向的词组合在一起,<br>    如：gravity=“top|center” 表示顶上居中<br>    layout_weight属性，设置组件所占的权重,默认值为0,组件分配剩余空间</p><p>##Framelayout（帧布局）<br>    这种布局表示默认在屏幕的左上角层层叠加,用来显示叠加的内容,这些内容还可以拖动<br>    布局属性：<br>    foreground：用于为当前的布局管理器设置一个前景图像(src图像资源)<br>    foregroundGravity设置前景图像的位置<br>    前景图像：始终位于最上层的图像，不能被其他图像盖住</p><p>##Tablelayout（表格布局）<br>    表格布局和后面的网格布局差不多，不过网格布局更好用。<br>    布局属性：<br>    collapseColumns（可以用来隐藏某一列或者几列，填入我们要隐藏的列数字之间用逗号隔开）</p><pre><code>stretchColumns stretch拉伸当我们某一列不能显示出来的时候可以自动拉伸用来显示我们的的数据,参数也是填入想要的列数即可。Tablelayout类以行和列的形式对控件进行管理，每一行为一个TableRow对象，或一个View控件。         当为TableRow对象时，可在TableRow下添加子控件，默认情况下，每个子控件占据一列。 &lt;/TableRow&gt;里面可以添加一些组件如&lt;EditText  &lt;TextView等等&lt;TableRow&gt;        当为View时，该View将独占一行。</code></pre><p>##Gridlayout（网格布局）<br>    比我们的表格布局管理器更灵活，可以跨列或者跨行，超出容器的组件会自动换行.<br>    布局属性：<br>    columcount （最大列数）<br>    orientation（组件的排列方式）<br>    rowcount（最大行数）<br>    组件属性：<br>    layout_column指定子组件位于网格的第几列<br>    layout_columnSpan指定子组件横向跨几列<br>    layout_columnWeight权重<br>    layout_Grivity指定子组件的位置<br>    layout_row指定子组件位于网格的第几行<br>    layout_rowspan纵向跨几列<br>    layout_rowWeight权重</p><p>##布局管理器的嵌套<br>    原则1：根布局管理器必须包含xmlns属性<br>    原则2：在一个布局文件中最多只有一个根布局管理器，如果需要有多个还需要使用另外一个布局管理器将他们括起来，而另外一个才是根布局管理器<br>    原则3：不能嵌套太深,影响速度</p><p>#基本UI组件</p><p>##文本类组件</p><p>###文本框组件TextView<br>    颜色 textcolor 字体 textsize 设置单行 singleline<br>    字符串资源  在res的values下明德strings里面 这里可以提前设置好我们需要使用的，通过@string/字符串的名字调用即可<br>    <a href="https://www.cnblogs.com/plokmju/p/Android_UI_TextView.html" target="_blank" rel="noopener">https://www.cnblogs.com/plokmju/p/Android_UI_TextView.html</a><br>    在博客园看到一片文章讲的很好这里直接引用过来。</p><p>###编辑框组件EditText<br>    hint：属性添加文本框提示内容<br>    inputType：设置密码,密码框里面有只能输入数字。<br>    drawable(+方位如：Left)属性是一张图片,在编辑框的指定位置添加图片<br>    注：drawableleft=drawablestart（最好使用这个）<br>    drawablepadding:用来设置图片和编辑框的距离<br>    lines:用来设置我们的编辑框的行数（输入文字）这个是显示的行数，超过这个行数可以拖动<br>    getText(）:获取我们输入的文本信息<br>        (在Mainactivity里面获取),提前指定一个id，在main里面new 一个<br>            EditText的类通过findviewbyid这个方法找到就可以使用了。</p><p>###图形视图组件imageview:<br>    scaleType：可以用来拉伸我们的图片让他充满，整个界面如：fitxy<br>    以后再补充</p><p>##按钮类组件</p><p>###图片按钮</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#布局和控件&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android</title>
    <link href="www.girlfriendnotfoundexception.com/hello-world/"/>
    <id>www.girlfriendnotfoundexception.com/hello-world/</id>
    <published>2019-06-17T07:00:14.530Z</published>
    <updated>2019-06-24T05:19:41.998Z</updated>
    
    <content type="html"><![CDATA[<p>#准备工作<br><img src="/images/xmbd.jpg" alt></p><a id="more"></a><p>##安装Android studio<br>  安装这一块，可以说这个Android studio是超级麻烦的，在csdn上找了很多教程，各种各样的都有，试了几次。最后还是在b站上找了一个视频教学。博主叫做孙老师非要尬聊，这个博主的视频还是做得不错的，这个是安装的视频教程：<br>  <a href="https://www.bilibili.com/videoav35319198" target="_blank" rel="noopener">https://www.bilibili.com/videoav35319198</a><br>  安装出错的同学可以去看看，很详细的。所以安装这个是有点麻烦，所以大家一定要有耐心，好的开头是很重要的。<br>  <img src="/images/android01.jpg" alt><br>  当我们看到这个绿色的run按亮起来时就都差不多了。</p><p>##创建一个hello world项目<br>  接下来我们就开始创建项目吧！创建一个程序界最最喜欢的入门代码，<br>  hello world。<br>  第一步，点击左上角的file，new一个module。接下来选择手机phone和平板Tablet。这个表示所要运行程序的场景。next，然后在接下来的界面第一行就是项目名称了,随便取。第二行module名称这里要注意我们只能填写英文,不能有汉字.<br>  第三行是我们的包名,不用太管他。以后如果要找源文件就去这里面找就可以了.<br>  最后一行是Minimun SDK最小的sdk版本一般我们都是设置它高于API 15以上。<br>  next，接下来选择一个activity，这里android studio会提供很多的模板，我们就选择一个Empty activity就可以了。</p><p>  第二步，然后就是android studio 帮你创建项目了。这里我们主要是要看到res目录下的layout布局文件中的activity——main.xml。这个是布局，我们的样式，还有一个在java里面，第一个文件夹下面有一个Mainactivity.java的文件。打开后发现里面有一个Mainactivity的class继承了一个activity。并且重写了一个oncreat方法。里面的这个代码：<br>  setContentView(R.layout.activity_main);就是选择了一种布局方式，是默认的布局方式，当然后面我们可以自己写布局，自己设置。<br>  然后我们要运行程序了，点击之前那个绿色的run按钮，接下来就要选择一个虚拟机，至于虚拟机是啥现在不需要了解，要是没有虚拟机也要紧创建一个就是啦！接下来就是选择手机或者平板的显示尺寸的，好像是选择2.7的吧！无所谓的大一点小一点都可以next创好以后。选择刚刚的AVD,acd是创建虚拟机是给他的命名。点击ok等待片刻即可。<br>  <img src="/images/android02.jpg" alt><br>  这个hello world 程序就完成了！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#准备工作&lt;br&gt;&lt;img src=&quot;/images/xmbd.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
